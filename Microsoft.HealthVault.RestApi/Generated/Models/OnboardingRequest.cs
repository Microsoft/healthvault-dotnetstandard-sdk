// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

using System.Collections.Generic;
using Newtonsoft.Json;

namespace Microsoft.HealthVault.RestApi.Generated.Models
{
    /// <summary>
    /// The content passed from a client during the onboarding process
    /// </summary>
    public partial class OnboardingRequest
    {
        /// <summary>
        /// Initializes a new instance of the OnboardingRequest class.
        /// </summary>
        public OnboardingRequest()
        {
          this.CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OnboardingRequest class.
        /// </summary>
        /// <param name="friendlyName">Gets sets the friendly name</param>
        /// <param name="applicationPatientId">Gets sets
        /// ApplicationPatientId</param>
        /// <param name="secretQuestion">Gets or sets the user's secret
        /// question</param>
        /// <param name="secretAnswer">Gets or sets the user's secret
        /// answer</param>
        /// <param name="firstName">Gets or sets the user's first name.</param>
        /// <param name="lastName">Gets or sets the user's last name.</param>
        /// <param name="email">Gets or sets the user's email address</param>
        /// <param name="zipCode">Gets and sets the user zip code/postal
        /// code</param>
        /// <param name="state">Gets and sets the user's state</param>
        /// <param name="country">Gets and sets the user's
        /// country/region</param>
        /// <param name="birthday">Gets and sets the user's birthday</param>
        /// <param name="gender">Gets and sets the user gender. Possible values
        /// include: 'Unknown', 'Male', 'Female'</param>
        /// <param name="weight">Gets and sets the user's weight</param>
        /// <param name="height">Gets and sets the user's Height</param>
        /// <param name="actionPlanTemplateIds">Gets or sets the list of action
        /// plan template ids to which the user
        /// will be assigned upon account creation</param>
        /// <param name="conditions">Gets or sets the list of health conditions
        /// that will be displayed to the user during consent
        /// collection</param>
        public OnboardingRequest(string friendlyName = default(string), string applicationPatientId = default(string), string secretQuestion = default(string), string secretAnswer = default(string), string firstName = default(string), string lastName = default(string), string email = default(string), string zipCode = default(string), string state = default(string), string country = default(string), System.DateTime? birthday = default(System.DateTime?), string gender = default(string), int? weight = default(int?), int? height = default(int?), IList<string> actionPlanTemplateIds = default(IList<string>), IList<string> conditions = default(IList<string>))
        {
            this.FriendlyName = friendlyName;
            this.ApplicationPatientId = applicationPatientId;
            this.SecretQuestion = secretQuestion;
            this.SecretAnswer = secretAnswer;
            this.FirstName = firstName;
            this.LastName = lastName;
            this.Email = email;
            this.ZipCode = zipCode;
            this.State = state;
            this.Country = country;
            this.Birthday = birthday;
            this.Gender = gender;
            this.Weight = weight;
            this.Height = height;
            this.ActionPlanTemplateIds = actionPlanTemplateIds;
            this.Conditions = conditions;
            this.CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets sets the friendly name
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets sets ApplicationPatientId
        /// </summary>
        [JsonProperty(PropertyName = "applicationPatientId")]
        public string ApplicationPatientId { get; set; }

        /// <summary>
        /// Gets or sets the user's secret question
        /// </summary>
        [JsonProperty(PropertyName = "secretQuestion")]
        public string SecretQuestion { get; set; }

        /// <summary>
        /// Gets or sets the user's secret answer
        /// </summary>
        [JsonProperty(PropertyName = "secretAnswer")]
        public string SecretAnswer { get; set; }

        /// <summary>
        /// Gets or sets the user's first name.
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or sets the user's last name.
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or sets the user's email address
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Gets and sets the user zip code/postal code
        /// </summary>
        [JsonProperty(PropertyName = "zipCode")]
        public string ZipCode { get; set; }

        /// <summary>
        /// Gets and sets the user's state
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets and sets the user's country/region
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets and sets the user's birthday
        /// </summary>
        [JsonProperty(PropertyName = "birthday")]
        public System.DateTime? Birthday { get; set; }

        /// <summary>
        /// Gets and sets the user gender. Possible values include: 'Unknown',
        /// 'Male', 'Female'
        /// </summary>
        [JsonProperty(PropertyName = "gender")]
        public string Gender { get; set; }

        /// <summary>
        /// Gets and sets the user's weight
        /// </summary>
        [JsonProperty(PropertyName = "weight")]
        public int? Weight { get; set; }

        /// <summary>
        /// Gets and sets the user's Height
        /// </summary>
        [JsonProperty(PropertyName = "height")]
        public int? Height { get; set; }

        /// <summary>
        /// Gets or sets the list of action plan template ids to which the user
        /// will be assigned upon account creation
        /// </summary>
        [JsonProperty(PropertyName = "actionPlanTemplateIds")]
        public IList<string> ActionPlanTemplateIds { get; set; }

        /// <summary>
        /// Gets or sets the list of health conditions that will be displayed
        /// to the user during consent collection
        /// </summary>
        [JsonProperty(PropertyName = "conditions")]
        public IList<string> Conditions { get; set; }

    }
}
