// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.HealthVault.RestApi.Generated
{
    using Microsoft.HealthVault;
    using Microsoft.HealthVault.RestApi;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Sleeps.
    /// </summary>
    public static partial class SleepsExtensions
    {
            /// <summary>
            /// Get the Sleep Activity data for this user by date range
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='startTime'>
            /// The ISO 8601 formatted start time of the Sleep activities, inclusive.
            /// </param>
            /// <param name='endTime'>
            /// The ISO 8601 formatted end time of the Sleep activities, exclusive.
            /// Defaults to the current time in UTC.
            /// </param>
            /// <param name='includeDetails'>
            /// comma separated string to additional details. Available values Basic, Full.
            /// Default - Basic
            /// </param>
            /// <param name='maxPageSize'>
            /// The maximum number of entries to return per page.  Defaults to 31
            /// </param>
            public static SleepResponse Get(this ISleeps operations, System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string includeDetails = default(string), int? maxPageSize = default(int?))
            {
                return operations.GetAsync(startTime, endTime, includeDetails, maxPageSize).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the Sleep Activity data for this user by date range
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='startTime'>
            /// The ISO 8601 formatted start time of the Sleep activities, inclusive.
            /// </param>
            /// <param name='endTime'>
            /// The ISO 8601 formatted end time of the Sleep activities, exclusive.
            /// Defaults to the current time in UTC.
            /// </param>
            /// <param name='includeDetails'>
            /// comma separated string to additional details. Available values Basic, Full.
            /// Default - Basic
            /// </param>
            /// <param name='maxPageSize'>
            /// The maximum number of entries to return per page.  Defaults to 31
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SleepResponse> GetAsync(this ISleeps operations, System.DateTime? startTime = default(System.DateTime?), System.DateTime? endTime = default(System.DateTime?), string includeDetails = default(string), int? maxPageSize = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(startTime, endTime, includeDetails, maxPageSize, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
