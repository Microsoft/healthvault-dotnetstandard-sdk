// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace HealthVault.Client.Models
{
    using HealthVault.Client;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The Completion Metrics for scheduled tasks
    /// </summary>
    public partial class ActionPlanScheduledTaskCompletionMetrics
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ActionPlanScheduledTaskCompletionMetrics class.
        /// </summary>
        public ActionPlanScheduledTaskCompletionMetrics()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ActionPlanScheduledTaskCompletionMetrics class.
        /// </summary>
        /// <param name="scheduledTime">The time at which this task is
        /// scheduled</param>
        /// <param name="reminderState">The reminder state of the task.
        /// Possible values include: 'Unknown', 'Off', 'OnTime',
        /// 'Before5Minutes', 'Before10Minutes', 'Before15Minutes',
        /// 'Before30Minutes', 'Before1Hour', 'Before2Hours', 'Before4Hours',
        /// 'Before8Hours'</param>
        /// <param name="scheduledDays">The days that this will show for the
        /// user
        /// Expected values: { 'Unknown', 'Everyday', 'Sunday', 'Monday',
        /// 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' }</param>
        public ActionPlanScheduledTaskCompletionMetrics(Time scheduledTime = default(Time), string reminderState = default(string), IList<string> scheduledDays = default(IList<string>))
        {
            ScheduledTime = scheduledTime;
            ReminderState = reminderState;
            ScheduledDays = scheduledDays;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the time at which this task is scheduled
        /// </summary>
        [JsonProperty(PropertyName = "scheduledTime")]
        public Time ScheduledTime { get; set; }

        /// <summary>
        /// Gets or sets the reminder state of the task. Possible values
        /// include: 'Unknown', 'Off', 'OnTime', 'Before5Minutes',
        /// 'Before10Minutes', 'Before15Minutes', 'Before30Minutes',
        /// 'Before1Hour', 'Before2Hours', 'Before4Hours', 'Before8Hours'
        /// </summary>
        [JsonProperty(PropertyName = "reminderState")]
        public string ReminderState { get; set; }

        /// <summary>
        /// Gets or sets the days that this will show for the user
        /// Expected values: { 'Unknown', 'Everyday', 'Sunday', 'Monday',
        /// 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' }
        /// </summary>
        [JsonProperty(PropertyName = "scheduledDays")]
        public IList<string> ScheduledDays { get; set; }

    }
}
